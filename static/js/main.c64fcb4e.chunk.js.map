{"version":3,"sources":["App.styles.js","GlobalStyle.js","components/WeatherForm/WeatherForm.styles.js","components/WeatherForm/WeatherForm.js","components/WeatherInfo/WeatherInfo.styles.js","components/WeatherIcon/WeatherIcon.styles.js","components/WeatherIcon/WeatherIcon.js","components/WeatherInfo/WeatherInfo.js","App.js","index.js"],"names":["backgroundMove","keyframes","StyledMain","styled","main","StyledSection","section","StyledHeader","header","StyledError","GlobalStyle","createGlobalStyle","normalize","StyledButton","button","StyledInput","input","WeatherForm","handleSubmit","handleChange","inputValue","onSubmit","type","onChange","placeholder","value","ParameterWrapper","div","StyledFigure","figure","WeatherIcon","weather","src","icon","alt","description","WeatherInfo","data","parametersToDisplay","name","temp","toFixed","feels_like","humidity","pressure","wind","speed","sys","country","map","parameter","key","App","useState","isLoading","setIsLoading","city","setCity","setData","error","setError","url","event","preventDefault","axios","get","then","response","status","Error","catch","target","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c64fcb4e.chunk.js","sourcesContent":["import styled, { keyframes } from 'styled-components';\r\n\r\nconst backgroundMove = keyframes`\r\n  0% {\r\n    background-position: 0%;\r\n  }\r\n  50% {\r\n    background-position: 100%;\r\n  }\r\n  100% {\r\n    background-position: 0%;\r\n  }\r\n`;\r\n\r\nexport const StyledMain = styled.main`\r\n  background: linear-gradient(90deg, rgba(0,88,130,1) 0%, rgba(150,70,194,1) 0%, rgba(0,169,203,1) 100%);\r\n  background-size: 500%;\r\n  animation: ${backgroundMove} 10s linear infinite;\r\n  min-height: 100vh;\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const StyledSection = styled.section`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  background: rgba(0, 0, 0, 0.20);\r\n  border: 2px solid white;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const StyledHeader = styled.header`\r\n  font-size: 2rem;\r\n  margin-bottom: 20px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const StyledError = styled.section`\r\n  font-size: 1.6rem;\r\n  padding: 10px;\r\n  color: rgb(255, 40, 40);\r\n  text-align: center;\r\n`;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport { normalize } from 'styled-normalize';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${normalize}\r\n  \r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n  body {\r\n    overflow-x: hidden;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledButton = styled.button`\r\n  cursor: pointer;\r\n  background: rgba(0, 255, 55, 0.500);\r\n  color: white;\r\n  width: 150px;\r\n  padding: 5px;\r\n  border: 2px solid white;\r\n  border-radius: 0 10px 10px 0;\r\n  line-height: 25px;\r\n  transition: background .5s;\r\n  font-size: 1.2rem;\r\n\r\n  &:hover {\r\n    background: rgba(0, 255, 55, 0.700);\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 1rem;\r\n    width: 20vw;\r\n  }\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  width: 50vw;\r\n  padding: 5px;\r\n  border: 2px solid white;\r\n  border-radius: 10px 0 0 10px;\r\n  line-height: 25px;\r\n  font-size: 1.2rem;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 1rem;\r\n    width: 60vw;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { StyledButton, StyledInput } from './WeatherForm.styles';\r\n\r\nconst WeatherForm = ({ handleSubmit, handleChange, inputValue }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <StyledInput type='text' onChange={handleChange} placeholder='Enter city name' value={inputValue} />\r\n      <StyledButton>GET</StyledButton>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default WeatherForm;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledSection = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const ParameterWrapper = styled.div`\r\n  padding: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 50vw;\r\n  border-bottom: white solid 2px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 80vw;\r\n  }\r\n`;\r\n\r\nexport const StyledHeader = styled.header`\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledFigure = styled.figure`\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  margin: 10px 0;\r\n`;\r\n","import React from 'react';\r\nimport { StyledFigure } from './WeatherIcon.styles';\r\n\r\nconst WeatherIcon = ({ weather }) => {\r\n  return (\r\n    <StyledFigure>\r\n      <img src={`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`} alt='weathericon' />\r\n      <figcaption>{weather[0].description}</figcaption>\r\n    </StyledFigure>\r\n  );\r\n}\r\n \r\nexport default WeatherIcon;","import React from 'react';\r\nimport {\r\n  StyledSection,\r\n  StyledHeader,\r\n  ParameterWrapper\r\n} from './WeatherInfo.styles';\r\nimport WeatherIcon from '../WeatherIcon/WeatherIcon';\r\n\r\nconst WeatherInfo = ({ data }) => {\r\n\r\n  const parametersToDisplay = [\r\n    { name: 'temperature', value: `${data.main.temp.toFixed(2)} °C` },\r\n    { name: 'sensed temperature', value: `${data.main.feels_like.toFixed(2)} °C` },\r\n    { name: 'humidity', value: `${data.main.humidity} %` },\r\n    { name: 'pressure', value: `${data.main.pressure} hPa` },\r\n    { name: 'wind speed', value: `${(data.wind.speed * 3.6).toFixed(2)} km/h` },\r\n  ]\r\n\r\n  return (\r\n    <StyledSection>\r\n      <StyledHeader>{data.name}, {data.sys.country}</StyledHeader>\r\n      <WeatherIcon weather={data.weather} />\r\n      {parametersToDisplay.map(parameter => (\r\n        <ParameterWrapper key={parameter.name}>\r\n          <div>{parameter.name}</div>\r\n          <div>{parameter.value}</div>\r\n        </ParameterWrapper>\r\n      ))}\r\n    </StyledSection>\r\n  );\r\n}\r\n\r\nexport default WeatherInfo;\r\n","import React, { useState } from 'react';\nimport {\n  StyledMain,\n  StyledSection,\n  StyledError,\n  StyledHeader\n} from './App.styles';\nimport GlobalStyle from './GlobalStyle';\nimport WeatherForm from './components/WeatherForm/WeatherForm';\nimport WeatherInfo from './components/WeatherInfo/WeatherInfo';\nimport ReactLoading from 'react-loading';\nimport axios from 'axios';\n\nfunction App() {\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [city, setCity] = useState('');\n  const [data, setData] = useState(null);\n  const [error, setError] = useState('');\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=8703a3b25bdfc07e180bd373faaf47bb&units=metric`;\n\n  const fetchWeather = () => {\n    setIsLoading(true);\n    axios.get(url)\n      .then(response => {\n        if (response.status !== 200) {\n          throw Error();\n        }\n        setError('');\n        setData(response.data);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        setError('Enter correct city name');\n        setData(null);\n        setIsLoading(false);\n      });\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (city !== '') {\n      fetchWeather();\n      setCity('');\n    } else {\n      setError('Enter city name');\n      setData(null);\n    }\n  }\n\n  const handleChange = (event) => {\n    setCity(event.target.value);\n  }\n\n  return (\n    <StyledMain>\n      <GlobalStyle />\n      <StyledSection>\n        <StyledHeader>Weather APP</StyledHeader>\n        <WeatherForm handleSubmit={handleSubmit} handleChange={handleChange} inputValue={city} />\n        <StyledError>{error}</StyledError>\n        {isLoading && <ReactLoading type='spin' color='white' />}\n        {data && <WeatherInfo data={data} />}\n      </StyledSection>\n    </StyledMain>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}